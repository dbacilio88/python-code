 Modulos del sistema:
 python nos provee a través de su librería estandar podemos destacar tres(3) os, sys u subprocess
 Este modulo nos permite acceder a funcionalidades dependientes del sistema operativo
 y nos permiten manipular la estructura de directorios (poder leer y escribir archivos)
https://docs.python.org/3/library/os.html.

#ARCHIVOS Y DIRECTORIOS
Saber si se puede acceder a un archivo o directorio os.access(path, modo_de_acceso)
Conocer el directorio actual os.getcwd()
Cambiar de directorio de trabajo os.chdir(nuevo_path)
Cambiar al directorio de trabajo raíz os.chroot()
Cambiar los permisos de un archivo o directorio os.chmod(path, permisos)
Cambiar el propietario de un archivo o directorio os.chown(path, permisos)
Crear un directorio os.mkdir(path[, modo])
Crear directorios recursivamente os.mkdirs(path[, modo])
Eliminar un archivo os.remove(path)
Eliminar un directorio os.rmdir(path)
Eliminar directorios recursivamente os.removedirs(path)
Renombrar un archivo os.rename(actual, nuevo)
Crear un enlace simbólico os.symlink(path, nombre_destino):


"""
MODULO PATH
os.path
El submodulo path (os.path) nos permite acceder a ciertas funcionalidades relacionadas con los nombres de las rutas
de los archivos y directorios
"""
#Ruta absoluta os.path.abspath(path)
#Directorio base os.path.basename(path)
#Saber si un directorio existe os.path.exists(path)
#Conocer último acceso a un directorio os.path.getatime(path)
#Conocer tamaño del directorio os.path.getsize(path)
#Saber si una ruta es:
#Una ruta absoluta os.path.isabs(path)
#Un archivo os.path.isfile(path)
#Un directorio os.path.isdir(path)
#Un enlace simbólico os.path.islink(path)
#Un punto de montaje os.path.ismount(path)
#https://docs.python.org/3/library/os.path.html
